# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $googleProjectId: '%env(resolve:GOOGLE_PROJECT_ID)%'
            App\Model\Reader\ClientInfoReaderInterface: '@App\Model\Reader\ClientInfoReader'
            App\Client\GeoLocationClientInterface: '@App\Client\HttpGeoLocationClient'
            App\Model\DataCollector\ClientDataCollectorInterface: '@App\Model\DataCollector\QueueDataCollector'
            App\Client\QueueClientInterface: '@App\Client\PubSubClient'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Model\DataCollector\QueueDataCollector:
        arguments:
            $queue: '@App\Client\PubSubClient'
            $storage: '@App\Client\BigQueryClient'
            $subscriptionName: 'subscription_name'
            $topicName: 'topic_name'
            $expanders:
                - '@App\Model\DataExpander\ClientInfoDataExpander'
                - '@App\Model\DataExpander\GeoLocationDataExpander'
                - '@App\Model\DataExpander\UserAgentDataExpander'

    App\Model\Reader\ClientInfoReader:
        arguments:
            $storageClient: '@App\Client\RedisClient'

    App\Client\BigQueryClient:
        arguments:
            $dataSetId: 'dataset_id'
